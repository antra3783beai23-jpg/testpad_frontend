<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic Tac Toe</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
      background: #f4f4f4;
    }

    h1 {
      margin-bottom: 20px;
    }

    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
    }

    .cell {
      width: 100px;
      height: 100px;
      background: white;
      border: 2px solid #333;
      font-size: 2.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: background 0.3s;
    }

    .cell:hover {
      background: #f0f0f0;
    }

    .status {
      margin: 20px;
      font-size: 1.2rem;
      font-weight: bold;
    }

    button {
      padding: 10px 20px;
      font-size: 1rem;
      cursor: pointer;
      border: none;
      background: #007bff;
      color: white;
      border-radius: 5px;
      transition: 0.3s;
    }

    button:hover {
      background: #0056b3;
    }
  </style>
</head>
<body>
  <h1>Tic Tac Toe</h1>
  <div class="board" id="board"></div>
  <div class="status" id="status">Player X's turn</div>
  <button onclick="resetGame()">Reset Game</button>

  <script>
    const board = document.getElementById("board");
    const status = document.getElementById("status");
    let currentPlayer = "X";
    let gameActive = true;
    let cells = ["", "", "", "", "", "", "", "", ""];

    function createBoard() {
      board.innerHTML = "";
      cells.forEach((_, index) => {
        const cell = document.createElement("div");
        cell.classList.add("cell");
        cell.dataset.index = index;
        cell.addEventListener("click", handleClick);
        board.appendChild(cell);
      });
    }

    function handleClick(e) {
      const index = e.target.dataset.index;

      if (cells[index] !== "" || !gameActive) return;

      cells[index] = currentPlayer;
      e.target.textContent = currentPlayer;

      if (checkWin()) {
        status.textContent = `ðŸŽ‰ Player ${currentPlayer} wins!`;
        gameActive = false;
        return;
      }

      if (cells.every(cell => cell !== "")) {
        status.textContent = "ðŸ˜® It's a draw!";
        gameActive = false;
        return;
      }

      currentPlayer = currentPlayer === "X" ? "O" : "X";
      status.textContent = `Player ${currentPlayer}'s turn`;
    }

    function checkWin() {
      const winPatterns = [
        [0,1,2],[3,4,5],[6,7,8], // rows
        [0,3,6],[1,4,7],[2,5,8], // cols
        [0,4,8],[2,4,6]          // diagonals
      ];

      return winPatterns.some(pattern => {
        const [a, b, c] = pattern;
        return cells[a] && cells[a] === cells[b] && cells[a] === cells[c];
      });
    }

    function resetGame() {
      cells = ["", "", "", "", "", "", "", "", ""];
      currentPlayer = "X";
      gameActive = true;
      status.textContent = "Player X's turn";
      createBoard();
    }

    createBoard();
  </script>
</body>
</html>
